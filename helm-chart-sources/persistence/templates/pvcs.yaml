{{- range .Values.volumes }}
{{- $parsedName := printf "%s-%s" .namespace .name }}
{{- $name := .pvName | default $parsedName | lower }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ $name }}
  {{- if .annotations }}
  annotations: {{- toYaml .annotations | nindent 4 }}
  {{- end }}
  {{- if .labels }}
  labels:  {{- toYaml .labels | nindent 4 }}
  {{- end }}
spec:
  capacity:
    storage: {{ .capacity | quote }}
  volumeMode: {{ .volumeMode | default "Filesystem" }}
  accessModes:
    - {{ .accessMode }}
  persistentVolumeReclaimPolicy: {{ .reclaimPolicy | default "Retain" }}
  storageClassName: {{ .storageClass | default "" | quote }}
  {{- if .csi }}
  # DISCLAIMER: this is setup for vmware and has not been tested or expanded out for other csi providers. Use with caution if not using tanzu
  csi:
    driver: {{ .csi.driver }}
    fsType: {{ .csi.fsType }}
    volumeAttributes:
  {{ toYaml .csi.volumeAttributes | indent 4 }}
  {{- end }}
    volumeHandle: {{ .csi.volumeHandle }}
  {{- if .nfs }}
  nfs:
    server: {{ .nfs.server }}
    path: {{ .nfs.path }}
  {{- if .nfs.mountOptions }}
  mountOptions:
    {{- range .nfs.mountOptions }}
    - {{ . }}
    {{- end }}
  {{- end }}
  {{- end }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .name }}
  {{- if .annotations }}
  annotations: {{- toYaml .annotations | nindent 4 }}
  {{- end }}
  {{- if .labels }}
  labels:  {{- toYaml .labels | nindent 4 }}
  {{- end }}
spec:
  accessModes:
    - {{ .accessMode | quote }}
  resources:
    requests:
      storage: {{ .capacity | quote }}
  storageClassName: {{ .storageClass | default "" | quote }}
  volumeMode: {{ .volumeMode | default "Filesystem" | quote }}
  volumeName: {{ $name }}
{{- end }}